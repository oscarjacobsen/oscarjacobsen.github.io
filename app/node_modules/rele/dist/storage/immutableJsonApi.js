'use strict';

var _Object$defineProperty = require('babel-runtime/core-js/object/define-property')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

_Object$defineProperty(exports, '__esModule', {
  value: true
});

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _utilCollectJsonApiResources = require('../util/collectJsonApiResources');

var _utilCollectJsonApiResources2 = _interopRequireDefault(_utilCollectJsonApiResources);

function wrapper(obj) {
  return _immutable2['default'].fromJS(obj);
}

function merger(a, b) {
  var attributes = a.get('attributes').merge(b.get('attributes'));
  var relationships = a.get('relationships').merge(b.get('relationships'));

  return _immutable2['default'].Map({
    type: a.get('type') || b.get('type'),
    id: a.get('id') || b.get('id'),
    attributes: attributes,
    relationships: relationships
  });
}

function getter(obj, key) {
  if (key === 'type' || key === 'id') {
    return obj.get(key);
  } else {
    return obj.getIn(['attributes', key]);
  }
}

function typeGetter(obj) {
  return obj.get('type');
}

function idGetter(obj) {
  return obj.get('id');
}

function relationshipGetter(obj, name) {
  var relationship = obj.getIn(['relationships', name, 'data']);
  return relationship && relationship.toJS();
}

function getResourcesFromResponse(response) {
  return (0, _utilCollectJsonApiResources2['default'])(response).map(wrapper);
}

exports['default'] = {
  wrapper: wrapper,
  merger: merger,
  getter: getter,
  typeGetter: typeGetter,
  idGetter: idGetter,
  relationshipGetter: relationshipGetter,
  getResourcesFromResponse: getResourcesFromResponse
};
module.exports = exports['default'];