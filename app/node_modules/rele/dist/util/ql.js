'use strict';

var _Object$defineProperty = require('babel-runtime/core-js/object/define-property')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

_Object$defineProperty(exports, '__esModule', {
  value: true
});

exports.collectArgs = collectArgs;
exports.collectFields = collectFields;
exports.collectInclude = collectInclude;

var _mergeArrays = require('./mergeArrays');

var _mergeArrays2 = _interopRequireDefault(_mergeArrays);

function collectArgs(args) {
  return args.args.reduce(function (acc, arg) {
    acc[arg.key] = arg.value;
    return acc;
  }, {});
}

function collectFields(cls) {
  var fields = {};

  function recursive(cls) {
    if (fields[cls.name]) {
      fields[cls.name] = (0, _mergeArrays2['default'])(field[cls.name], cls.block.fields);
    } else {
      fields[cls.name] = cls.block.fields.concat();
    }

    cls.block.includes.forEach(function (include) {
      fields[cls.name] = (0, _mergeArrays2['default'])(fields[cls.name], [include.name]);
      recursive(include['class']);
    });
  }

  recursive(cls);

  return fields;
}

function collectInclude(cls) {
  var include = [];

  function recursive(cls, prefix) {
    cls.block.includes.forEach(function (i) {
      include = (0, _mergeArrays2['default'])(include, ['' + prefix + '' + i.name]);
      recursive(i['class'], '' + prefix + '' + i.name + '.');
    });
  }

  recursive(cls, '');

  return include;
}