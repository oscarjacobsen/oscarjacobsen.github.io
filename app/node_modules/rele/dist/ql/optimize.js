'use strict';

var _Object$defineProperty = require('babel-runtime/core-js/object/define-property')['default'];

var _Object$keys = require('babel-runtime/core-js/object/keys')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

_Object$defineProperty(exports, '__esModule', {
  value: true
});

exports['default'] = optimize;

var _utilMergeArrays = require('../util/mergeArrays');

var _utilMergeArrays2 = _interopRequireDefault(_utilMergeArrays);

var _traverse = require('./traverse');

var _traverse2 = _interopRequireDefault(_traverse);

function mergeIncludes(a, b) {
  var includes = {};

  a.forEach(function (include) {
    includes[include.name] = include;
  });

  b.forEach(function (include) {
    if (includes[include.name]) {
      includes[include.name]['class'] = mergeClasses(includes[include.name]['class'], include['class']);
    } else {
      includes[include.name] = include;
    }
  });

  return _Object$keys(includes).map(function (key) {
    return includes[key];
  });
}

function mergeClasses(a, b) {
  if (a.name !== b.name) {
    throw new Error('Unable to merge classes "' + a.name + '" and "' + b.name + '"');
  }

  a.block.fields = (0, _utilMergeArrays2['default'])(a.block.fields, b.block.fields);
  a.block.includes = mergeIncludes(a.block.includes, b.block.includes);
  a.block.calls = mergeIncludes(a.block.calls, b.block.calls);

  if (b.block.classes.length > 0) {
    throw new Error('You should never see this error');
  }

  return a;
}

function optimize(ast) {
  return (0, _traverse2['default'])(ast, function (node, parentNode) {
    switch (node.type) {
      case 'class':
        if (!node.name) {
          node.name = node.block.classes.map(function (k) {
            return k.name;
          }).shift();
        }
        if (!node.name) {
          throw new Error('Unable to find class name. Anonymous class should include any named class.');
        }
        node = node.block.classes.reduce(mergeClasses, node);
        node.block.classes = [];
        break;
    }

    return node;
  });
}

module.exports = exports['default'];