/** Uses native localStorage or sessionStorage if available.
 * Otherwise in-memory storage is used.
 * If in-memory object already exists in window, that one is used. Otherwise new one is created. */
declare class AppStorage {
    private storageType;
    private _underlyingStorage;
    constructor(storageType: "localStorage" | "sessionStorage");
    private getStorage;
    /** Get underlying native or emulated storage. Used in tests. */
    get underlyingStorage(): Storage;
    /** Reload the storage. Used in tests. */
    reload(): void;
    get length(): number;
    getItem(key: string): string | null;
    setItem(key: string, value: string): void;
    removeItem(key: string): void;
    clear(): void;
    key(index: number): string | null;
}
export declare const LocalStorage: AppStorage;
export declare const SessionStorage: AppStorage;
export {};
