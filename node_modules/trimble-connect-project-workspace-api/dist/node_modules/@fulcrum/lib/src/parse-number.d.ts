export declare enum NumberFormat {
    AllowNegative = 1,
    AllowIntegers = 2,
    AllowDecimals = 4,
    AllowScientific = 8,
    AllowFractions = 16,
    Any = 31
}
/**
 * Parses any number. Supports:
 * - Integers (e.g. `1`, `-5`)
 * - Decimals (e.g. `1.2`, `-.5`)
 * - Fractions (e.g. `1/2`, `-5/9`)
 * - Mixed fractions (e.g. `1 2/3`, `-6 10/2`)
 * - Scientific notation (e.g. `1e5`, `+.5E-4`)
 *
 * @param value The string to parse
 * @param format Optional format restrictions. Defaults to allowing any format. Note that if you pass a value here,
 * you need to allow explicitly everything you need. (If you only allow negative numbers but nothing else, nothing
 * can be parsed.) Also note that only allowing scientific notation won't do anything itself, you also need to allow
 * integers, decimals or both. So probably better to just subtract from the Any format with XOR to disallow things:
 * `NumberFormat.Any ^ NumberFormat.AllowFractions`
 * @throws If the number can't be parsed
 */
export declare function parseNumber(value: string, format?: NumberFormat): number;
export declare function normalizeNumberString(value: string): string;
